// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.224.3/containers/alpine
{
	"name": "RustDevContainer",
	"dockerComposeFile" : ["docker-compose.yml"],
	"service": "vscode",
    "runServices": ["vscode"],
	"shutdownAction": "stopCompose",
	"workspaceFolder": "/workspace",
		
	// Set *default* container specific settings.json values on container create. 
	"settings": {
		"lldb.executable": "/usr/bin/lldb",
		// VS Code don't watch files under ./target
		"files.watcherExclude": {
			"**/target/**": true
		},
		"rust-analyzer.checkOnSave.command": "clippy"
	},

	// Add the IDs of extensions you want installed when the container is created.
	// Note that some extensions may not work in Alpine Linux. See https://aka.ms/vscode-remote/linux.
	"extensions": [
		"ms-azuretools.vscode-docker",
		"rokoroku.vscode-theme-darcula",
		"eamodio.gitlens",
		"jerrygoyal.shortcut-menu-bar",
		"mutantdino.resource",
		"vadimcn.vscode-lldb",
		"matklad.rust-analyzer",
		"tamasfe.even-better-toml",
		"serayuzgur.crates"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Replace when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--init", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
